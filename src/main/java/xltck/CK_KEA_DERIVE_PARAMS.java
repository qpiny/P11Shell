package xltck;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : xltCk.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("xltCk") 
public class CK_KEA_DERIVE_PARAMS extends StructObject {
	public CK_KEA_DERIVE_PARAMS() {
		super();
	}
	public CK_KEA_DERIVE_PARAMS(Pointer pointer) {
		super(pointer);
	}
	/// C type : CK_BBOOL
	@Field(0) 
	public byte isSender() {
		return this.io.getByteField(this, 0);
	}
	/// C type : CK_BBOOL
	@Field(0) 
	public CK_KEA_DERIVE_PARAMS isSender(byte isSender) {
		this.io.setByteField(this, 0, isSender);
		return this;
	}
	/// C type : CK_ULONG
	@Field(1) 
	public int ulRandomLen() {
		return this.io.getIntField(this, 1);
	}
	/// C type : CK_ULONG
	@Field(1) 
	public CK_KEA_DERIVE_PARAMS ulRandomLen(int ulRandomLen) {
		this.io.setIntField(this, 1, ulRandomLen);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(2) 
	public Pointer<Byte > pRandomA() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : CK_BYTE_PTR
	@Field(2) 
	public CK_KEA_DERIVE_PARAMS pRandomA(Pointer<Byte > pRandomA) {
		this.io.setPointerField(this, 2, pRandomA);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(3) 
	public Pointer<Byte > pRandomB() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : CK_BYTE_PTR
	@Field(3) 
	public CK_KEA_DERIVE_PARAMS pRandomB(Pointer<Byte > pRandomB) {
		this.io.setPointerField(this, 3, pRandomB);
		return this;
	}
	/// C type : CK_ULONG
	@Field(4) 
	public int ulPublicDataLen() {
		return this.io.getIntField(this, 4);
	}
	/// C type : CK_ULONG
	@Field(4) 
	public CK_KEA_DERIVE_PARAMS ulPublicDataLen(int ulPublicDataLen) {
		this.io.setIntField(this, 4, ulPublicDataLen);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(5) 
	public Pointer<Byte > pPublicData() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : CK_BYTE_PTR
	@Field(5) 
	public CK_KEA_DERIVE_PARAMS pPublicData(Pointer<Byte > pPublicData) {
		this.io.setPointerField(this, 5, pPublicData);
		return this;
	}
}
