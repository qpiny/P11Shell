package xltck;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : xltCk.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("xltCk") 
public class CK_SSL3_RANDOM_DATA extends StructObject {
	public CK_SSL3_RANDOM_DATA() {
		super();
	}
	public CK_SSL3_RANDOM_DATA(Pointer pointer) {
		super(pointer);
	}
	/// C type : CK_BYTE_PTR
	@Field(0) 
	public Pointer<Byte > pClientRandom() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : CK_BYTE_PTR
	@Field(0) 
	public CK_SSL3_RANDOM_DATA pClientRandom(Pointer<Byte > pClientRandom) {
		this.io.setPointerField(this, 0, pClientRandom);
		return this;
	}
	/// C type : CK_ULONG
	@Field(1) 
	public int ulClientRandomLen() {
		return this.io.getIntField(this, 1);
	}
	/// C type : CK_ULONG
	@Field(1) 
	public CK_SSL3_RANDOM_DATA ulClientRandomLen(int ulClientRandomLen) {
		this.io.setIntField(this, 1, ulClientRandomLen);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(2) 
	public Pointer<Byte > pServerRandom() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : CK_BYTE_PTR
	@Field(2) 
	public CK_SSL3_RANDOM_DATA pServerRandom(Pointer<Byte > pServerRandom) {
		this.io.setPointerField(this, 2, pServerRandom);
		return this;
	}
	/// C type : CK_ULONG
	@Field(3) 
	public int ulServerRandomLen() {
		return this.io.getIntField(this, 3);
	}
	/// C type : CK_ULONG
	@Field(3) 
	public CK_SSL3_RANDOM_DATA ulServerRandomLen(int ulServerRandomLen) {
		this.io.setIntField(this, 3, ulServerRandomLen);
		return this;
	}
}
