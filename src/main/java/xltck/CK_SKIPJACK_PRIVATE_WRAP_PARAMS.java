package xltck;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : xltCk.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("xltCk") 
public class CK_SKIPJACK_PRIVATE_WRAP_PARAMS extends StructObject {
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS() {
		super();
	}
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS(Pointer pointer) {
		super(pointer);
	}
	/// C type : CK_ULONG
	@Field(0) 
	public int ulPasswordLen() {
		return this.io.getIntField(this, 0);
	}
	/// C type : CK_ULONG
	@Field(0) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS ulPasswordLen(int ulPasswordLen) {
		this.io.setIntField(this, 0, ulPasswordLen);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(1) 
	public Pointer<Byte > pPassword() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : CK_BYTE_PTR
	@Field(1) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS pPassword(Pointer<Byte > pPassword) {
		this.io.setPointerField(this, 1, pPassword);
		return this;
	}
	/// C type : CK_ULONG
	@Field(2) 
	public int ulPublicDataLen() {
		return this.io.getIntField(this, 2);
	}
	/// C type : CK_ULONG
	@Field(2) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS ulPublicDataLen(int ulPublicDataLen) {
		this.io.setIntField(this, 2, ulPublicDataLen);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(3) 
	public Pointer<Byte > pPublicData() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : CK_BYTE_PTR
	@Field(3) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS pPublicData(Pointer<Byte > pPublicData) {
		this.io.setPointerField(this, 3, pPublicData);
		return this;
	}
	/// C type : CK_ULONG
	@Field(4) 
	public int ulPAndGLen() {
		return this.io.getIntField(this, 4);
	}
	/// C type : CK_ULONG
	@Field(4) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS ulPAndGLen(int ulPAndGLen) {
		this.io.setIntField(this, 4, ulPAndGLen);
		return this;
	}
	/// C type : CK_ULONG
	@Field(5) 
	public int ulQLen() {
		return this.io.getIntField(this, 5);
	}
	/// C type : CK_ULONG
	@Field(5) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS ulQLen(int ulQLen) {
		this.io.setIntField(this, 5, ulQLen);
		return this;
	}
	/// C type : CK_ULONG
	@Field(6) 
	public int ulRandomLen() {
		return this.io.getIntField(this, 6);
	}
	/// C type : CK_ULONG
	@Field(6) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS ulRandomLen(int ulRandomLen) {
		this.io.setIntField(this, 6, ulRandomLen);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(7) 
	public Pointer<Byte > pRandomA() {
		return this.io.getPointerField(this, 7);
	}
	/// C type : CK_BYTE_PTR
	@Field(7) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS pRandomA(Pointer<Byte > pRandomA) {
		this.io.setPointerField(this, 7, pRandomA);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(8) 
	public Pointer<Byte > pPrimeP() {
		return this.io.getPointerField(this, 8);
	}
	/// C type : CK_BYTE_PTR
	@Field(8) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS pPrimeP(Pointer<Byte > pPrimeP) {
		this.io.setPointerField(this, 8, pPrimeP);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(9) 
	public Pointer<Byte > pBaseG() {
		return this.io.getPointerField(this, 9);
	}
	/// C type : CK_BYTE_PTR
	@Field(9) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS pBaseG(Pointer<Byte > pBaseG) {
		this.io.setPointerField(this, 9, pBaseG);
		return this;
	}
	/// C type : CK_BYTE_PTR
	@Field(10) 
	public Pointer<Byte > pSubprimeQ() {
		return this.io.getPointerField(this, 10);
	}
	/// C type : CK_BYTE_PTR
	@Field(10) 
	public CK_SKIPJACK_PRIVATE_WRAP_PARAMS pSubprimeQ(Pointer<Byte > pSubprimeQ) {
		this.io.setPointerField(this, 10, pSubprimeQ);
		return this;
	}
}
