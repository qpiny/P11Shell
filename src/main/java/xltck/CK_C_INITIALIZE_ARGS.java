package xltck;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import xltck.XltCkLibrary.CK_CREATEMUTEX;
import xltck.XltCkLibrary.CK_DESTROYMUTEX;
import xltck.XltCkLibrary.CK_LOCKMUTEX;
import xltck.XltCkLibrary.CK_UNLOCKMUTEX;
/**
 * <i>native declaration : xltCk.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("xltCk") 
public class CK_C_INITIALIZE_ARGS extends StructObject {
	public CK_C_INITIALIZE_ARGS() {
		super();
	}
	public CK_C_INITIALIZE_ARGS(Pointer pointer) {
		super(pointer);
	}
	/// C type : CK_CREATEMUTEX
	@Field(0) 
	public Pointer<CK_CREATEMUTEX > CreateMutex() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : CK_CREATEMUTEX
	@Field(0) 
	public CK_C_INITIALIZE_ARGS CreateMutex(Pointer<CK_CREATEMUTEX > CreateMutex) {
		this.io.setPointerField(this, 0, CreateMutex);
		return this;
	}
	/// C type : CK_DESTROYMUTEX
	@Field(1) 
	public Pointer<CK_DESTROYMUTEX > DestroyMutex() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : CK_DESTROYMUTEX
	@Field(1) 
	public CK_C_INITIALIZE_ARGS DestroyMutex(Pointer<CK_DESTROYMUTEX > DestroyMutex) {
		this.io.setPointerField(this, 1, DestroyMutex);
		return this;
	}
	/// C type : CK_LOCKMUTEX
	@Field(2) 
	public Pointer<CK_LOCKMUTEX > LockMutex() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : CK_LOCKMUTEX
	@Field(2) 
	public CK_C_INITIALIZE_ARGS LockMutex(Pointer<CK_LOCKMUTEX > LockMutex) {
		this.io.setPointerField(this, 2, LockMutex);
		return this;
	}
	/// C type : CK_UNLOCKMUTEX
	@Field(3) 
	public Pointer<CK_UNLOCKMUTEX > UnlockMutex() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : CK_UNLOCKMUTEX
	@Field(3) 
	public CK_C_INITIALIZE_ARGS UnlockMutex(Pointer<CK_UNLOCKMUTEX > UnlockMutex) {
		this.io.setPointerField(this, 3, UnlockMutex);
		return this;
	}
	/// C type : CK_FLAGS
	@Field(4) 
	public int flags() {
		return this.io.getIntField(this, 4);
	}
	/// C type : CK_FLAGS
	@Field(4) 
	public CK_C_INITIALIZE_ARGS flags(int flags) {
		this.io.setIntField(this, 4, flags);
		return this;
	}
	/// C type : CK_VOID_PTR
	@Field(5) 
	public Pointer<? > pReserved() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : CK_VOID_PTR
	@Field(5) 
	public CK_C_INITIALIZE_ARGS pReserved(Pointer<? > pReserved) {
		this.io.setPointerField(this, 5, pReserved);
		return this;
	}
}
